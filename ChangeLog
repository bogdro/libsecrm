2009-02-20	Bogdan Drozdowski <bogdandr@op.pl>

	* libsecrm version 1.2
	  Displaying error messages about stat macros (during compiling) only
	  if sys/stat.h is present. No more public variables and non-namespaced
	  function names.
	* libsecrm-priv.h.in: fixed PATH_STYLE vs. PATH_SEP typo. Defining
	  GCC_WARN_UNUSED_RESULT to an empty string if not supported by the
	  compiler.
	* lsr_banning.c: fixed checking for unistd.h. Changed MAXPATHLEN to
	  LSR_MAXPATHLEN.
	* lsr_banning.c (__lsr_check_prog_ban): checking if fopen() is present
	* configure.ac: added a check for -O2 compiler flag. Searching for
	  varargs.h if stdarg.h not available.
	* libsecrm.spec.in: added CFLAGS='-march=i386' to configure stage.
	* doc/libsecrm.texi.in: removed "indicateurl", since OpenBSD's
	  makeinfo doesn't like it. Added a note on how to hide Libsecrm.
	* lsr_public.c.in, lsr_opens.c: better checking for stdarg.h/varargs.h.
	* lsr_memory.c: wiping with randomly-selected pattern.
	* lsr_unlink.c: added the rmdir() function. Renaming the object back
	  to its original name if unlinking failed.
	* src/Makefile.am: fixed too many files distributed

2008-11-30	Bogdan Drozdowski <bogdandr@op.pl>

	* libsecrm version 1.1
	  Added some memory management functions. Changed "! STDC_HEADERS" to
	  "!defined STDC_HEADERS". Verified compiling on OpenBSD. Defining
	  _ATFILE_SOURCE for *at() functions' declarations.
	* docs: added the libsecrm website addresses on SourceForge. Added
	  info about wiping memory. Added one more "thanks" to the manpage.
	* lsr_cfg.h: moved GCC_WARN_UNUSED_RESULT to libsecrm-priv.h
	* libsecrm-priv.h: made some function declarations more portable.
	* lsr_public.c: made some external function declarations more
	  portable. Calling the original functions no matter whether
	  they've been found on the system. Libsecrm's replacements will be
	  called anyway.
	* configure: automatically generating version numbers in
	  libsecrm.spec, src/lsr_cfg.h and doc/libsecrm.texi. Automatically
	  generating src/libsecrm.h, src/lsr_public.c and src/libsecrm-priv.h,
	  for portability. Checking for 64-bit functions and defining their
	  prototypes by hand if necessary. Checking for dlvsym() in libdl.
	  Changed the docs' path in the configure warning.
	* lsr_truncate.c: fill_buffer now public as __lsr_fill_buffer. It also
	  checks for NULL in "selected".
	* libsecrm.c: better checking for dlvsym().
	* libsecrm.spec: changed the URLs. Updated description.

2008-07-13	Bogdan Drozdowski <bogdandr@op.pl>

	* libsecrm version 1.0
	  Removed the "errno" bug, discovered while working on wipefreespace,
	  thanks to Patrick 'marlowe' McDonald. Using Gutmann method by
	  default. It can be switched off with
	  	./configure --enable-random-method
	* configure.ac: Added new compiler options to check for: -O1
	  -Wuninitialized, -Winit-self, -Wlogical-op, -fstack-protector-all,
	  -Wno-long-long. A new option to select the shred-like wiping method.
	  No more using autoconf variables - total independence.
	* THANKS: a new file with the list of people I'd like to thank.
	* lsr_truncate.c, libsecrm-priv.h: implemented the full Gutmann
	  method.
	* lsr_banning.c (check_map): better typecasting with the tmp_inode.
	* libsecrm.c: much better signal return type handling.

2008-05-02	Bogdan Drozdowski <bogdandr@op.pl>

	* libsecrm version 0.9
	  The Konqueror bug turned out to be really in Konqueror, not
	  libsecrm. This release brings only portability corrections - both
	  in 'configure' and source files.
	* configure.ac: Better portability. Less relying on autoconf
	  variables.
	* libsecrm.c: Better checking for libdl/dlsym.

2007-11-28	Bogdan Drozdowski <bogdandr@op.pl>

	* libsecrm version 0.8
	  Defining _GNU_SOURCE only if not already defined. Setting nagative
	  errno codes, like it's usually done. Best (probably) checks if a
	  file is used. Some banning checks moved after object checks to
	  improve performance.
	* lsr_public.c: now pre-ANSI-compatible (I hope). Better openat()
	  and openat64() declarations. Checking if openat() and unlinkat()
	  available and returning -ENOSYS if not instead of calling
	  nonexistent functions.
	* libsecrm-priv.h: added openat(), openat64() and unlinkat()
	  declarations, if these functions are not available.
	* configure.ac: check for openat() and unlinkat(), added checks
	  for 2 more compiler options, double quoting all of them. Better
	  checking for format warnings. Corrections in m4/ax_gcc_option.m4.
	  Checking for RTLD_NEXT in fcntl.h. Defining _GNU_SOURCE only if not
	  already defined.
	* lsr_opens.c, lsr_creat.c: printing flags/mode in octal.
	* lsr_opens.c (open64, open): banning a file pattern for
	  'rpm --addsign' to work.
	* lsr_banning.c: new file with functions checking if a file or program
	  is not to be tampered with (moved from libsecrm.c). Added checking
	  if a file is already opened, using /proc filesystem (probably the
	  best way to do it, taken from 'fuser' source). Slow, but effective.

2007-11-11	Bogdan Drozdowski <bogdandr@op.pl>

	* libsecrm version 0.7
	  Using old wipe-anything technique if new signal+fcntl is not
	  available. Signal & fcntl stuff now only in one function (called
	  for every wiping). Renaming libsecrm.h to libsecrm-priv.h
	  Libsecrm is now a library for developers, too. It has a header file
	  - ${prefix}/include/libsecrm.h and a "import library" libsecrm.a.
	  Big portability corrections, some to non-ANSI compilers. Libsecrm
	  now compiles on OpenBSD. Checking compiler options instead of
	  asuuming them.
	* libsecrm-priv.h: internal header file renamed from libsecrm.h.
	  Defining ftruncate/64, if needed. Defining path separator (needed
	  for opening the banning files).
	* lsr_unlink.c (__lsr_rename): fixed bugs with strncpy(). Now
	  returning NULL in case of error instead of the old name. Syncing
	  only if necessary (number of passes > 1).
	* docs: more requirements for compiling. Adding info saying
	  that write permissions to the file being wiped are required. Minor
	  corrections. Added info about not supporting the syscall()
	  functions. Added info on using libsecrm as a development library.
	* libsecrm.c: some cleanup. Fixed not closing ban files before return.
	  Fixed stack error. Fixed banning - empty lines always matched.
	* lsr_opens.c (open, open64): removed useless doubled checking.
	* lsr_creat.c: supporting the creat() and creat64() functions.
	* configure.ac:  Checking for renameat() existence. Checking for
	  F_SETLEASE, F_GETSIG and F_SETSIG and printing a warning if not
	  available. Better portability.
	* libsecrm.h: public interface header file. Old contents renamed to
	  libsecrm-priv.h
	* lsr_public.c: public interface source file.
	* lsr_truncate.c (__lsr_fd_truncate): fsync()ing only if number
	  of passes > 1. Memory leak fixed.

2007-09-16	Bogdan Drozdowski <bogdandr@op.pl>

	* libsecrm version 0.6.
	  Better signal handling (needed because of the Xpdf/libfreetype
	  issue). Adding support for banning programs and files from
	  messing with them, via config files in ${prefix}/etc. More
	  info in the docs. 64-bit functions now active.
	* configure.ac: Better portability.

2007-09-08	Bogdan Drozdowski <bogdandr@op.pl>

	* libsecrm version 0.5
	* better portability (checking for the 'long long' type). Xpdf issue
	  fixed, but only on sysmes with GNU/Linux kernel >= 2.4 (using
	  fcntl() to check if a file is already open). Better error handling.
	* lsr_opens.c: non-serious bugs fixed.

2007-08-06	Bogdan Drozdowski <bogdandr@op.pl>

	* libsecrm version 0.4 (0.3 lived less than half a day on the net)
	* Switched to GPLv3. New compile macro 'BUF_SIZE' in CFLAGS available.
	  Using #pragmas for better compile-time error checking.
	* lsr_truncate.c: Checking if file is regular or a link instead
	  of checking simply for non-directories. Memory leaks fixed.
	  One function for all actions. Making 'buf' and 'seleced' local
	  helps process/thread-safety. No action is taken if stat() is not
	  available, stat() returns error or file is not a regular file/link.
	  Portability corrections. More error checking. Openeing files in
	  exclusive mode.
	* lsr_unlink.c: Portability corrections. Using stat64/lstat64/fstat64,
	  if the system uses it. Single function for renaming files. Renaming
	  done only if action will be taken, not unconditionally. Sync after
	  each rename. No action is taken if lstat()/fstat() is not available,
	  it returns an error or the object is not a regular file.
	  Workaround an issue with Kate/DCOP: if file name matches
	  ".ICEauthority", the file is NOT wiped and NOT truncated.
	  Workaround an issue with BASH and here-documents: if file name
	  matches "sh-thd-", the file is NOT wiped and NOT truncated. BASH
	  unlinks the file before reading from it.
	* libsecrm.h: Better compile-time macro 'PASSES' handling. Separating
	  64 bit and non-64 bit versions. More 'const'. Conditionally declare
	  renameat().
	* lsr_opens.c (freopen, freopen64): Using ftruncate/64 instead of
	  truncate/64, because the file may have been opened in some kind
	  of exclusive mode and normal truncate would fail as it would need
	  to open the file once more. This also doesn't increase the number
	  of file handles associated with the same file. If getting the file
	  descriptor fails, truncate/64 is used.
	* lsr_opens.c (fdopen): removed, because the original function never
	  wipes any data (man fdopen).
	* doc update with full texts of licences.

2007-07-14	Bogdan Drozdowski <bogdandr@op.pl>

	* libsecrm version 0.2.
	* lsr_unlink.c (unlink, unlinkat): Bugs fixed.
	* lsr_unlink.c: Better error handling. Memory checks.
	* lsr_opens.c: Better error handling.

2007-07-08	Bogdan Drozdowski <bogdandr@op.pl>

	* First release of libsecrm, version 0.1.
	  Replaces the following functions: fopen, freopen, fdopen, open,
	  openat, unlink, unlinkat, truncate, ftruncate (or the 64-bit
	  versions of these, if needed).

