This is the README file for libsecrm, a library which ensures
 secure removing of files and cleaning memory on the system.

Author: Bogdan Drozdowski, bogdandr @ op . pl
License: GPLv3+

================================================================

The binary version of libsecrm is linked with the GNU C Library,
 licensed under the GNU LGPL:

Copyright (C) 1991,92,93,94,95,96,97,98,99,2000,2001,2002,2003,2004,2005,
 2006,2007 Free Software Foundation, Inc.

The GNU C Library is free software; you can redistribute it and/or modify
 it under the terms of the GNU Lesser General Public License as published
 by the Free Software Foundation; either version 2.1 of the License, or
 (at your option) any later version.

The GNU C Library is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 License for more details.

You should have received a copy of the GNU Lesser General Public License
 along with the GNU C Library; if not, write to the Free Software Foundation,
 Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA

================================================================

Requirements for compiling:

- a non-root account. Please, NEVER compile or 'make' anything as root.

- a working C compiler

- development package for the C library (like glibc-devel and glibc-headers)
  with the signal.h and (especially) fcntl.h, unistd.h and sys/stat.h headers.

  The unistd.h contains functions needed for wiping to work at all. Nothing
  will be done if this file is missing.

  The sys/stat.h contains functions needed to check the wiped object's type.
  Libsecrm will wipe only regular files. If this file is missing, nothing can
  be wiped.

  The dlfcn.h header contains functions needed to call the original functions.
  It has to have RTLD_NEXT defined. Libsecrm wouldn't work without this, so it
  won't compile without this.

  The fcntl header has functions needed to prevent wiping files that are
  set to be deleted, but still open. It has to have F_SETLEASE, F_GETSIG and
  F_SETSIG defined in it (this is available on GNU/Linux, but may not be
  available everywhere) for this feature to work.
  Libsecrm will work without this, but strange things may happen. If you don't
  have this, put /bin/bash in the program ban file and "ICE" (without the
  double quotes) in the file ban file (read the "Manual configuration" chapter
  in the "info" documentation).

- libdl, the dynamic loading library, with its development package
  (unless the required functions are in the C library)

- the 'make' program

Type './configure' to configure the program for your system.
Type 'make' to compile the program.
Documentation comes complied (you can copy it right away), but can be changed
 and recompiled, if you have the 'makeinfo' program ('texinfo' package).

If you wish to use the 25-pass random pattern selection method (like shred)
instead of the 35-pass Gutmann method, use

	./configure --enable-random-method
or
	make CFLAGS='-DLSR_WANT_RANDOM'

Default number of passes used to wipe data is 35 in Gutmann method and 25 in
random method. This can get annoying on slow devices. To use some other number
of passes, compile the library as follows:

	make CFLAGS='-DPASSES=n'

Replace 'n' with your desired number of passes (minimum recommended is 3).

Default limit size is 1MB - wiping more than 1MB bytes will be done 1kB at a
time. If you think some other limit would be more suitable, compile the
library like this:

	make CFLAGS='-DBUF_SIZE=n'

Replace 'n' with your desired limit in bytes. If you wish to have an additional
pass wiping with zeros, use

	./configure --last-zero
or
	make CFLAGS='-DLAST_PASS_ZERO'

If you wish to have all passes wipe with zeros, use

	./configure --all-zeros
or
	make CFLAGS='-DALL_PASSES_ZERO'

To use libsecrm as a development library, pass
`--enable-public-interface' to `./configure' and include the header
BEFORE any system headers. Compile-time errors may occur otherwise.
Remeber to link your program with libsecrm - adding `-lsecrm'
(optionally preceeded with `-L ${libdir}') to GCC is enough.

Any flags can be combined like this:

	./configure --all-zeros
	make CFLAGS='-DPASSES=n -DBUF_SIZE=x -DLAST_PASS_ZERO'

Type 'make install' to install the library.

Type 'info libsecrm' (after installation) or 'info doc/libsecrm.info'
(before installation) to get help.

=======================================================

Building an RPM package (the old way):

1) copy the libsecrm.spec file to /usr/src/redhat/SPECS
2) copy the source package libsecrm-XX.tar.gz to /usr/src/redhat/SOURCES
3) type
	rpmbuild -ba /usr/src/redhat/SPECS/libsecrm.spec
4) get the rpms from /usr/src/redhat/RPMS/i386 and /usr/src/redhat/SRPMS

Building an RPM package (the new way):

1) copy the libhideip.spec file to $HOME/rpmbuild/SPECS
2) copy the source package libsecrm-XX.tar.gz to $HOME/rpmbuild/SOURCES
3) type
        rpmbuild -ba $HOME/rpmbuild/SPECS/libsecrm.spec
4) get the rpms from $HOME/rpmbuild/RPMS/i386 and $HOME/rpmbuild/SRPMS
